<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on VxBus</title>
    <link>https://www.vxbus.com/tags/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on VxBus</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 04 Feb 2024 21:16:15 +0800</lastBuildDate><atom:link href="https://www.vxbus.com/tags/c++/rss.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C&#43;&#43; volatile</title>
      <link>https://www.vxbus.com/post/software/volatile-in-c-plus-plus.html</link>
      <pubDate>Sun, 04 Feb 2024 21:16:15 +0800</pubDate>
      
      <guid>https://www.vxbus.com/post/software/volatile-in-c-plus-plus.html</guid>
      <description>&lt;p&gt;volatile关键字在C++中解决了编译器优化可能带来的问题，确保程序能够正确地访问由外部因素改变的变量。下面是volatile解决的主要问题和使用场景的详细说明：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>美机构：立即停止使用C和C&#43;&#43;</title>
      <link>https://www.vxbus.com/post/software/US-organizations-warn-stop-using-C-and-C-plus-plus.html</link>
      <pubDate>Thu, 28 Dec 2023 12:07:57 +0800</pubDate>
      
      <guid>https://www.vxbus.com/post/software/US-organizations-warn-stop-using-C-and-C-plus-plus.html</guid>
      <description>&lt;p&gt;对于嵌入式软件工程师来说，C/C++语言是最常用的编程语言之一，它是一种高效、简洁、灵活的编程语言，尤其在嵌入式、单片机领域，它创造了许多奇迹，包括智能手机、家用电器、汽车或是医疗设备。&lt;/p&gt;
&lt;p&gt;但每每提及“安全”问题时，大部分人便将C/C++划在围城之外。12月6日，美国网络安全和基础设施局 （CISA）联合美国国家安全局（NSA）、美国联邦调查局 （FBI）及澳大利亚、加拿大、英国和新西兰的网络安全机构发布《内存安全路线图指南》，点名C/C++存在内存安全漏洞，软件开发商应放弃使用，改用C#、Rust、Go、Java、Python和Swift等内存安全的编程语言 (MSL)。&lt;/p&gt;
&lt;p&gt;那么，这究竟是什么情况，我们还能安心使用C/C++吗？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一文读懂C&#43;&#43;如何实现多返回值</title>
      <link>https://www.vxbus.com/post/software/how-to-implement-multiple-return-values-in-C-plus.html</link>
      <pubDate>Wed, 20 Dec 2023 16:54:19 +0800</pubDate>
      
      <guid>https://www.vxbus.com/post/software/how-to-implement-multiple-return-values-in-C-plus.html</guid>
      <description>&lt;p&gt;在C++编程的旅程中，我们时常会遇到需要一次性返回多个值的情况。传统的C++中，我们可能会通过引用、指针或结构体等方式来实现这个目标。然而，随着C++11的引入，元组的出现为多返回值带来了一种全新的解决方案。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
